{"version":3,"file":"static/js/677.423a5492.chunk.js","mappings":"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","sources":["components/Profile/Bookmarks.tsx","components/Profile/ProfilePage.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Book } from '../../interfaces/book'\r\n\r\ntype BookmarksProps = {\r\n  books: Book[]\r\n}\r\n\r\nconst Bookmarks: React.FC<BookmarksProps> = props => {\r\n  const { books } = props;\r\n  const [value, setValue] = useState('1')\r\n  const currentBooks = books.filter(book => book.bookmark === value)\r\n\r\n  const handleClick = (value)\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <a onClick={() => setValue('')}>\r\n          Все\r\n        </a>\r\n        <a onClick={() => setValue('reading')}>\r\n          Читаю\r\n        </a>\r\n        <a onClick={() => setValue('abandoned')}>\r\n          Брошено\r\n        </a>\r\n        <a onClick={() => setValue('planned')}>\r\n          Буду читать\r\n        </a>\r\n      </div>\r\n      <div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bookmarks\r\n","import React, { useEffect, useState } from 'react'\r\nimport { getProfile, getCurrentProfile, getCurrentProfileMarks } from '../../actions/profileActions'\r\nimport { useParams } from 'react-router-dom'\r\nimport { State } from '../../interfaces'\r\nimport VisibilityIcon from '@mui/icons-material/Visibility'\r\nimport ArticleIcon from '@mui/icons-material/Article'\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime'\r\nimport { useAppDispatch, useAppSelector } from '../../hooks/hooks'\r\n// import TranslateIcon from '@mui/icons-material/Translate';\r\n// import PublicIcon from '@mui/icons-material/Public';\r\n// import AttributionIcon from '@mui/icons-material/Attribution';\r\nimport Box from '@mui/material/Box'\r\nimport Tab from '@mui/material/Tab'\r\nimport TabContext from '@mui/lab/TabContext'\r\nimport TabList from '@mui/lab/TabList'\r\nimport TabPanel from '@mui/lab/TabPanel'\r\nimport Bookmarks from './Bookmarks'\r\n\r\nconst ProfilePage: React.FC = () => {\r\n  const { id } = useParams()\r\n  const dispatch = useAppDispatch()\r\n  const { user } = useAppSelector(({ root }) => root.user)\r\n  const { currentProfile, currentBooks } = useAppSelector(({ root }) => root.profile)\r\n  const [value, setValue] = useState('1')\r\n  const [loading, setLoading] = useState(true)\r\n  // useEffect(() => {\r\n  //   if (isSuccess && currentProfile.id === _user.id) setIsEditor(true);\r\n  // }, [isSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const profileId = parseInt(id)\r\n      dispatch(getCurrentProfile(profileId))\r\n      dispatch(getCurrentProfileMarks(profileId))\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const handleChange = (e: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n    setValue(newValue)\r\n  }\r\n  const bookDescs = [\r\n    {\r\n      name: 'В закладках',\r\n      logo: <ArticleIcon sx={{ width: 30, height: 30 }} />,\r\n      value: 'bookmarksCount',\r\n    },\r\n    {\r\n      name: 'Лайков',\r\n      logo: <VisibilityIcon sx={{ width: 30, height: 30 }} />,\r\n      value: 'likes',\r\n    },\r\n    {\r\n      name: 'Комментариев',\r\n      logo: <VisibilityIcon sx={{ width: 30, height: 30 }} />,\r\n      value: 'comments',\r\n    },\r\n    {\r\n      name: 'Дата регистрации',\r\n      logo: <AccessTimeIcon sx={{ width: 30, height: 30 }} />,\r\n      value: 'createdAt',\r\n    },\r\n  ]\r\n\r\n  console.log(currentProfile)\r\n\r\n  return (\r\n    <>\r\n      {!loading && (\r\n        <div className='bg-slate-100 pt-1 min-h-[calc(100vh_-_65px_-_148px)]'>\r\n          <div className='max-w-[988px] mx-auto'>\r\n            <div>\r\n              <div className='w-full h-[160px] bg-cred text-center py-4 mt-4 rounded-t-lg'>\r\n                <p className='text-2xl text-white'>{currentProfile.username}</p>\r\n              </div>\r\n              <div className='w-full p-4 bg-white rounded-b-lg'>\r\n                <div className='flex flex-row relative -top-24'>\r\n                  <div className='w-[336px] py-2 mt-28 px-6'>\r\n                    <p>Информация о пользователе</p>\r\n                    {bookDescs.map((desc) => (\r\n                      <div className='flex flex-row py-2' key={desc.name + desc.value}>\r\n                        {desc.logo}\r\n                        <div className='ml-2'>\r\n                          <p className='text-sm m-0 leading-none'>{desc.name}</p>\r\n                          <p className='text-lg leading-[0.75rem]'>профиль какой-то</p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <div className='w-[240px]'>\r\n                    <img\r\n                      src={process.env.REACT_APP_API_URL + '/img/' + currentProfile.img}\r\n                      className='h-[240px] w-[240px] rounded-full object-cover border-2 border-white'\r\n                    />\r\n                  </div>\r\n                  <div className='flex flex-col w-[336px] py-2'>\r\n                    <div className='flex flex-row mt-11 justify-center h-14'>\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/img/${currentProfile.img}`}\r\n                        className='my-auto rounded-full border-2 border-white aspect-square w-12 object-cover'\r\n                      />{' '}\r\n                      <div className='my-auto mx-4'>\r\n                        <p className='text-white text-left'>Команда</p>\r\n                        <div className='text-left text-xl'>Команда а</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className='ml-4 px-6 mt-2'>\r\n                      <p>Ссылки</p>\r\n                      <div className='flex flex-row mt-2'>\r\n                        <p className='text-lg ml-4'>vk.com</p>\r\n                      </div>\r\n                      <div className='flex flex-row mt-2'>\r\n                        <p className='text-lg ml-4'>vk.com</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <TabContext value={value}>\r\n              <div>\r\n                <Box className='mt-4'>\r\n                  <TabList\r\n                    onChange={handleChange}\r\n                    aria-label='lab API tabs example'\r\n                    className='max-w-[1144px] mx-auto'\r\n                    TabIndicatorProps={{\r\n                      sx: { backgroundColor: '#AAA' },\r\n                    }}\r\n                    sx={{\r\n                      '& button': {\r\n                        color: 'white',\r\n                        backgroundColor: '#FF5A5A',\r\n                      },\r\n                      '& button:active': { color: 'black', backgroundColor: 'white' },\r\n                      '& button:hover': { color: 'white', backgroundColor: '#FF7C8C' },\r\n                      '& button.Mui-selected': { color: 'black', backgroundColor: 'white' },\r\n                    }}\r\n                  >\r\n                    <Tab label='Закладки' value='1' />\r\n                    <Tab label='Работы' value='2' />\r\n                    <Tab label='Комментарии' value='3' />\r\n                  </TabList>\r\n                </Box>\r\n                <TabPanel sx={{ padding: 0 }} value='1'>\r\n                  <Bookmarks books={currentBooks} />\r\n                </TabPanel>\r\n                <TabPanel sx={{ padding: 0 }} value='2'>\r\n                  Item two\r\n                </TabPanel>\r\n                <TabPanel sx={{ padding: 0 }} value='3'>\r\n                  Item Three\r\n                </TabPanel>\r\n              </div>\r\n            </TabContext>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n"],"names":["props","books","_useState","useState","_useState2","_slicedToArray","value","setValue","filter","book","bookmark","_jsxs","children","_jsx","onClick","id","useParams","dispatch","useAppDispatch","_useAppSelector2","useAppSelector","_ref","root","user","_ref2","profile","currentProfile","currentBooks","_useState3","_useState4","loading","setLoading","useEffect","profileId","parseInt","getCurrentProfile","getCurrentProfileMarks","bookDescs","name","logo","ArticleIcon","sx","width","height","VisibilityIcon","AccessTimeIcon","console","log","_Fragment","className","username","map","desc","src","process","img","concat","TabContext","Box","TabList","onChange","e","newValue","TabIndicatorProps","backgroundColor","color","Tab","label","TabPanel","padding","Bookmarks"],"sourceRoot":""}