{"version":3,"file":"static/js/944.d5222771.chunk.js","mappings":"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","sources":["components/Book/BookPage.tsx","../node_modules/@mui/icons-material/Public.js"],"sourcesContent":["import React, { lazy, useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { getBook, incrementBookViews, postBookmarkByBookId } from '../../actions/bookAction'\r\nimport { getHTML } from '../../actions/univAction'\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport './style.css'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Tab from '@mui/material/Tab'\r\nimport TabContext from '@mui/lab/TabContext'\r\nimport TabList from '@mui/lab/TabList'\r\nimport TabPanel from '@mui/lab/TabPanel'\r\n\r\nimport VisibilityIcon from '@mui/icons-material/Visibility'\r\nimport ArticleIcon from '@mui/icons-material/Article'\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime'\r\nimport TranslateIcon from '@mui/icons-material/Translate'\r\nimport PublicIcon from '@mui/icons-material/Public'\r\nimport AttributionIcon from '@mui/icons-material/Attribution'\r\n\r\nconst Chapters = lazy(() => import('./Chapters'))\r\nconst Group = lazy(() => import('./Group'))\r\nconst Info = lazy(() => import('./Info'))\r\n\r\nconst bookDescs = [\r\n  {\r\n    name: 'Главы',\r\n    logo: <ArticleIcon sx={{ width: 30, height: 30 }} />,\r\n    value: 'chaptersCount',\r\n  },\r\n  {\r\n    name: 'Просмотры',\r\n    logo: <VisibilityIcon sx={{ width: 30, height: 30 }} />,\r\n    value: 'views',\r\n  },\r\n  {\r\n    name: 'Год',\r\n    logo: <AccessTimeIcon sx={{ width: 30, height: 30 }} />,\r\n    value: 'year',\r\n  },\r\n]\r\n\r\nconst BookPage: React.FC = () => {\r\n  const [desc, setDesc] = useState('')\r\n  const [value, setValue] = useState('1')\r\n  const navigate = useNavigate()\r\n\r\n  const { id } = useParams()\r\n\r\n  const { isSuccess, error, data } = useQuery<any, Error>(['id', id], getBook, {\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false,\r\n  })\r\n\r\n  const isLoading = true\r\n  const isError = false\r\n  console.log(data)\r\n  console.log(isError)\r\n  // useEffect(() => {\r\n  //   if (isSuccess && id) {\r\n  //     incrementBookViews(id)\r\n  //     getHTML(`books/${data.id}/${data.originalName}.txt`)\r\n  //   }\r\n  // }, [isSuccess])\r\n\r\n  const onClickButton = () => {\r\n    if (id) postBookmarkByBookId(id, 0)\r\n  }\r\n\r\n  const handleChange = (e: React.SyntheticEvent<Element, Event>, newValue: string) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='bg-slate-100 min-h-[calc(100vh_-_65px_-_148px)]'>\r\n        <div className='max-w-[988px] mx-auto py-4'>\r\n          <div className='w-full min-h-[160px] bg-cred text-white text-center'>\r\n            <div className='pt-4'>\r\n              {isLoading ? (\r\n                <>\r\n                  <div className='h-4 w-1/2 bg-slate-200 rounded-lg mx-auto'></div>\r\n                  <div className='h-4 w-1/3 bg-slate-200 rounded-lg mx-auto mt-3'></div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <span className='text-base'>{data.origName}</span>\r\n                  <span className='text-2xl'>{data.name}</span>\r\n                </>\r\n              )}\r\n              <br />\r\n            </div>\r\n            <div className='h-16'></div>\r\n          </div>\r\n          <div className='bg-white h-[330px]'>\r\n            <div className='relative -top-20 flex flex-row justify-between p-4'>\r\n              <div className='w-[336px]'>\r\n                <div className='flex justify-center mt-9 h-14'>\r\n                  {isLoading ? (\r\n                    <>\r\n                      <div className='h-8 w-32 bg-slate-200 rounded-lg my-auto mr-6'></div>\r\n                      <div className='h-8 w-32 bg-slate-200 rounded-lg my-auto'></div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <span className='mr-6 bg-cred py-1 px-3 my-auto border-2 border-white'>\r\n                        Авторское\r\n                      </span>\r\n                      <span className='bg-cred py-1 px-3 my-auto border-2 border-white'>\r\n                        в процессе\r\n                      </span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <div className='mt-2 flex flex-col justify-center align-middle'>\r\n                  <div className='px-6 flex flex-row py-2'>\r\n                    <AttributionIcon sx={{ width: 30, height: 30 }} />\r\n                    <div className='ml-2'>\r\n                      {isLoading ? (\r\n                        <div className='h-3 w-12 bg-slate-200 rounded-lg'></div>\r\n                      ) : (\r\n                        <p className='text-lg leading-none'>{data.author.value}</p>\r\n                      )}\r\n                      <p className='text-sm m-0 leading-none'>Автор</p>\r\n                    </div>\r\n                  </div>\r\n                  {bookDescs.map((desc) => (\r\n                    <div className='px-6 flex flex-row py-2' key={desc.name + desc.value}>\r\n                      {desc.logo}\r\n                      <div className='ml-2'>\r\n                        {isLoading ? (\r\n                          <div className='h-3 w-12 bg-slate-200 rounded-lg'></div>\r\n                        ) : (\r\n                          <p className='text-lg leading-[0.75rem]'>{data[desc.value]}</p>\r\n                        )}\r\n                        <p className='text-sm m-0 leading-none'>{desc.name}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  <div className='px-6 flex flex-row py-2'>\r\n                    <PublicIcon sx={{ width: 30, height: 30 }} />\r\n                    <div className='ml-2'>\r\n                      {isLoading ? (\r\n                        <div className='h-3 w-12 bg-slate-200 rounded-lg'></div>\r\n                      ) : (\r\n                        <span className='text-lg ml-2'>{data.language?.value}</span>\r\n                      )}\r\n                      <p className='text-sm m-0 leading-none'> Язык перевода </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='w-[240px]'>\r\n                {isLoading ? (\r\n                  <div className='rounded-md h-[320px] w-[240px] border-2 bg-slate-200 border-white'></div>\r\n                ) : (\r\n                  <img\r\n                    src={process.env.REACT_APP_API_URL + '/img/' + data.img}\r\n                    className='rounded-md h-[320px] w-[240px] object-cover border-2 border-white'\r\n                  />\r\n                )}\r\n                <div className='bookHeadButtons mt-2'>\r\n                  <button onClick={() => navigate(`/book/${id}/${1}`)}>Начать читать</button>\r\n                  <button onClick={onClickButton}>В закладки</button>\r\n                </div>\r\n              </div>\r\n              <div className='w-[336px]'>\r\n                <div className='flex flex-row mt-9 justify-center h-14'>\r\n                  {isLoading ? (\r\n                    <div></div>\r\n                  ) : (\r\n                    <>\r\n                      <img\r\n                        src={`${process.env.REACT_APP_API_URL}/img/${data.translator.img}`}\r\n                        className='my-auto rounded-full border-2 border-white aspect-square w-12 object-cover'\r\n                      />\r\n                      <div className='my-auto mx-4'>\r\n                        <p className='text-white text-left'>Переводчик</p>\r\n                        <div className='text-left text-xl'>{data.translator.nickname}</div>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <div className='flex flex-col px-10 mt-2'>\r\n                  <p className='text-xl pb-2'>Ссылки переводчиков:</p>\r\n                  <div className='flex flex-row my-2'>\r\n                    <p className='text-lg ml-4'>vk.com</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {isLoading ? (\r\n            <>\r\n              <div className='bg-cred text-white text-sm px-3 py-1 my-1 mr-2 rounded-md border-b-2'></div>\r\n            </>\r\n          ) : (\r\n            <Group type='Теги' items={[...data.genres, ...data.tags, ...data.fandoms]} />\r\n          )}\r\n          <TabContext value={value}>\r\n            <div>\r\n              <Box className='mt-4'>\r\n                <TabList\r\n                  onChange={handleChange}\r\n                  aria-label='lab API tabs example'\r\n                  className='max-w-[1144px] mx-auto'\r\n                  TabIndicatorProps={{\r\n                    sx: { backgroundColor: '#AAA' },\r\n                  }}\r\n                  sx={{\r\n                    '& button': {\r\n                      color: 'white',\r\n                      backgroundColor: '#FF5A5A',\r\n                    },\r\n                    '& button:active': { color: 'black', backgroundColor: 'white' },\r\n                    '& button:hover': { color: 'white', backgroundColor: '#FF7C8C' },\r\n                    '& button.Mui-selected': { color: 'black', backgroundColor: 'white' },\r\n                  }}\r\n                >\r\n                  <Tab label='Подробности' value='1' />\r\n                  <Tab label='Главы' value='2' />\r\n                  <Tab label='Обсуждения' value='3' />\r\n                </TabList>\r\n              </Box>\r\n              <TabPanel sx={{ padding: 0 }} value='1'>\r\n                <Info book={data} desc={desc} isLoading={true} />\r\n              </TabPanel>\r\n              {isLoading && (\r\n                <>\r\n                  <TabPanel sx={{ padding: 0 }} value='2'>\r\n                    <Chapters bookId={data.id} translatorId={data.translator.id} />\r\n                  </TabPanel>\r\n                  <TabPanel sx={{ padding: 0 }} value='3'>\r\n                    Item Three\r\n                  </TabPanel>\r\n                </>\r\n              )}\r\n            </div>\r\n          </TabContext>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BookPage\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2v1.93zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39z\"\n}), 'Public');\nexports.default = _default;"],"names":["Chapters","lazy","Info","bookDescs","name","logo","_jsx","ArticleIcon","sx","width","height","value","VisibilityIcon","AccessTimeIcon","_useState","useState","_useState2","_slicedToArray","desc","_useState3","_useState4","setValue","navigate","useNavigate","id","useParams","_useQuery","useQuery","getBook","retry","refetchOnWindowFocus","refetchOnReconnect","data","isSuccess","error","console","log","_Fragment","children","className","_jsxs","AttributionIcon","map","PublicIcon","onClick","concat","postBookmarkByBookId","TabContext","Box","TabList","onChange","e","newValue","TabIndicatorProps","backgroundColor","color","Tab","label","TabPanel","padding","book","isLoading","bookId","translatorId","translator","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}