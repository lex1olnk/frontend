{"version":3,"file":"static/js/30.9d57ec41.chunk.js","mappings":"mNAIaA,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAY,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChBC,EAAAA,GAAMC,IAAI,GAADC,OAAIT,EAAI,SAAQ,KAAD,EAAnC,OAAmCC,EAAAG,EAAAM,KAAvCR,EAAID,EAAJC,KAAIE,EAAAO,OAAA,SACLT,GAAI,wBAAAE,EAAAQ,OAAA,GAAAb,EAAA,KACZ,gBAHmBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAUPC,EAAO,eAAAC,GAAArB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoB,EAAOC,GAAW,IAAAC,EAAA,OAAAvB,EAAAA,EAAAA,KAAAM,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAEnBgB,EAAAA,EAAMd,IAAI,GAADC,OAAIc,yBAA6B,KAAAd,OAAIU,IAAO,KAAD,EAA7D,OAAHC,EAAGC,EAAAX,KAAAW,EAAAV,OAAA,SACFS,EAAIlB,MAAI,OAAAmB,EAAAhB,KAAA,EAAAgB,EAAAG,GAAAH,EAAA,SAEfI,EAAAA,GAAMC,MAAM,8EAAkB,yBAAAL,EAAAT,OAAA,GAAAM,EAAA,kBAEjC,gBAPmBS,GAAA,OAAAV,EAAAH,MAAA,KAAAC,UAAA,I,6ICTpB,SAASa,IAAkC,IAAD,IAAAC,EAAAd,UAAAe,OAAnBC,EAAO,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPF,EAAOE,GAAAlB,UAAAkB,GAC5B,OAAOF,EAAQG,OAAOC,SAASC,KAAK,IACtC,CAaO,IAAMC,EAAgD,SAAAC,GAC3D,IACEC,EAQED,EARFC,YACAC,EAOEF,EAPFE,cACAC,EAMEH,EANFG,SACAC,EAKEJ,EALFI,mBACAC,EAIEL,EAJFK,aACAC,EAGEN,EAHFM,WACAC,EAEEP,EAFFO,QACAC,EACER,EADFQ,UAEFC,GAAsCC,EAAAA,EAAAA,UAAS,YAAWC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA4BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCE,EAAMD,EAAA,GAAWA,EAAA,GA4BxB,OACEE,EAAAA,EAAAA,MAAA,OACEC,UACE,+DACAN,EACA,IACAL,EACDY,SAAA,EACDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,UAAUG,KAAK,IAAGF,UAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAkBI,IAAI,oBAEvCF,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,UACrCC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,UAASC,SAAC,iFAE5BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yDAAwDC,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAefD,EAAAA,EAAAA,MAAA,OACEC,UAAW7B,EACT2B,EAAS,gBAAkB,mBAC3B,wBACAV,GACAa,SAAA,EACFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAAC,mHAExCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iDAAgDC,SAjE5D,CACT,CACEZ,UAAW,aACXD,QAAS,eACTM,YAAa,YAEf,CACEL,UAAW,iBACXD,QAAS,eACTM,YAAa,eAEf,CACEL,UAAW,iBACXD,QAAS,eACTM,YAAa,gBAEf,CACEL,UAAW,iBACXD,QAAS,cACTM,YAAa,eAEf,CACEL,UAAW,gBACXD,QAAS,iBACTM,YAAa,mBA0CHW,KAAI,SAAAC,GACN,IAAMC,EAAM,WAAaD,EAAEjB,UAAUmB,OAAO,GAC5C,OACEN,EAAAA,EAAAA,KAAA,OAEEO,QAAS,WACPtB,EAAWmB,EAAElB,SACbF,EAAaoB,EAAEjB,WACfM,EAAeW,EAAEZ,YACnB,EACAM,UAAW,sBAAwBM,EAAElB,QAAU,IAAMkB,EAAEjB,UAAYkB,EAAIN,SAAC,KANnEM,EAUX,OAEFR,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACV,UAAU,UAAUW,GAAI,CAAEC,MAAO,KAAMX,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+EACNC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACL,aAAW,cACXC,aAAc,GACdC,iBAAkBjC,EAClBkC,KAAM,EACNC,OAAK,EACLC,IAAK,GACLC,IAAK,GACLC,kBAAkB,aAGtBrB,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACV,UAAU,UAAUW,GAAI,CAAEC,MAAO,KAAMX,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,+EACNC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACL,aAAW,cACXC,aAAc,IACdC,iBAAkBhC,EAClBiC,KAAM,GACNC,OAAK,EACLC,IAAK,EACLC,IAAK,EACLC,kBAAkB,aAGtBrB,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACV,UAAU,UAAUW,GAAI,CAAEC,MAAO,KAAMX,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,uGACNC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACL,aAAW,cACXC,aAAc,IACdC,iBAAkB/B,EAClBgC,KAAM,GACNC,OAAK,EACLC,IAAK,IACLC,IAAK,KACLC,kBAAkB,aAGtBrB,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACV,UAAU,UAAUW,GAAI,CAAEC,MAAO,KAAMX,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,2FACNC,EAAAA,EAAAA,KAACW,EAAAA,GAAM,CACL,aAAW,cACXC,aAAc,GACdC,iBAAkB9B,EAClB+B,KAAM,EACNC,OAAK,EACLC,IAAK,EACLC,IAAK,GACLC,kBAAkB,oBAOhC,E,wCCxKaC,EAAU,eAAAC,GAAAnF,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAJ,GAAA,IAAAqF,EAAAC,EAAAC,EAAAjF,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACZ,OADqB0E,EAAQrF,EAARqF,SAAQC,GAAA/B,EAAAA,EAAAA,GACzB8B,EAAQ,GAAhBC,EAAA,GAAEC,EAAED,EAAA,GAAA7E,EAAAE,KAAA,EACWC,EAAAA,GAAMC,IAAI,WAADC,OAAYyE,IAAK,OAArC,OAAqCjF,EAAAG,EAAAM,KAAzCR,EAAID,EAAJC,KAAIE,EAAAO,OAAA,SACLT,GAAI,wBAAAE,EAAAQ,OAAA,GAAAb,EAAA,KACZ,gBAJsBc,GAAA,OAAAkE,EAAAjE,MAAA,KAAAC,UAAA,K,UCiEvB,EA5DoB,WAClB,IAAAgC,GAAkCC,EAAAA,EAAAA,UAAS,cAAaC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDD,EAASG,EAAA,GAAEN,EAAYM,EAAA,GAC9BI,GAA8BL,EAAAA,EAAAA,UAAS,eAAcM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CR,EAAOS,EAAA,GAAEV,EAAUU,EAAA,GAC1B6B,GAAgCnC,EAAAA,EAAAA,UAAS,IAAGoC,GAAAlC,EAAAA,EAAAA,GAAAiC,EAAA,GAArCE,EAAQD,EAAA,GAAE7C,EAAW6C,EAAA,GAC5BE,GAAoCtC,EAAAA,EAAAA,UAAS,GAAEuC,GAAArC,EAAAA,EAAAA,GAAAoC,EAAA,GAAxCE,EAAUD,EAAA,GAAE/C,EAAa+C,EAAA,GAChCE,GAA0BzC,EAAAA,EAAAA,UAAS,KAAI0C,GAAAxC,EAAAA,EAAAA,GAAAuC,EAAA,GAAhCpB,EAAKqB,EAAA,GAAEjD,EAAQiD,EAAA,GACtBC,GAA8C3C,EAAAA,EAAAA,UAAS,GAAE4C,GAAA1C,EAAAA,EAAAA,GAAAyC,EAAA,GAAjCjD,GAAFkD,EAAA,GAAoBA,EAAA,IAC1CC,GAAwB7C,EAAAA,EAAAA,UAAS,IAAG8C,GAAA5C,EAAAA,EAAAA,GAAA2C,EAAA,GAA7BE,EAAID,EAAA,GAEXE,GAFoBF,EAAA,IAECG,EAAAA,EAAAA,OAAbC,EAAIF,EAAJE,KAAMhB,EAAEc,EAAFd,GAEdiB,GAAuDC,EAAAA,EAAAA,UAAmB,CAAC,KAAMlB,GAAKJ,EAAY,CAChGuB,OAAO,EACPC,sBAAsB,EACtBC,oBAAoB,IAHdC,EAASL,EAATK,UAAWC,EAASN,EAATM,UAAW/E,EAAKyE,EAALzE,MAAOgF,EAAOP,EAAPO,QAASxG,EAAIiG,EAAJjG,KAY9C,OANAyG,EAAAA,EAAAA,YAAU,WACJF,GAAavG,IAAMc,EAAAA,EAAAA,IAAQ,SAADP,OAAUyF,EAAI,KAAAzF,OAAIyE,EAAE,KAAAzE,OAAIyE,EAAE,QAC1D,GAAG,CAACuB,IAEJG,QAAQC,IAAI3G,IAGVsD,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAApD,SAAA,CACG8C,IAAa7C,EAAAA,EAAAA,KAAA,OAAAD,SAAK,qBAClBgD,IAAW/C,EAAAA,EAAAA,KAAA,OAAAD,SAAMhC,EAAMqF,UACvBN,IACCjD,EAAAA,EAAAA,MAAAsD,EAAAA,SAAA,CAAApD,SAAA,EACEC,EAAAA,EAAAA,KAACtB,EAAc,CACbE,YAAaA,EACbC,cAAeA,EACfC,SAAUA,EACVC,mBAAoBA,EACpBE,WAAYA,EACZD,aAAcA,EACdE,QAASA,EACTC,UAAWA,KAEba,EAAAA,EAAAA,KAAA,OACEF,UACE,qDAAuDZ,EAAU,IAAMC,EACxEY,UACDF,EAAAA,EAAAA,MAAA,OAAKwD,MAAO,CAAE3C,MAAOA,GAASZ,UAAW,cAAcC,SAAA,EACrDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,2CACNC,EAAAA,EAAAA,KAAA,OACEqD,MAAO,CACLC,SAAU5B,EACVG,WAAYA,GACZ9B,UACAqC,IAAQpC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sIAQ/B,C","sources":["actions/univAction.ts","components/Book/Chapter/TextOptionMenu.tsx","actions/chapterApi.ts","components/Book/Chapter/ChapterPage.tsx"],"sourcesContent":["import { $authHost, $host } from '../helpers';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const getData = async(type: string) => {\r\n  const { data } = await $host.get(`${type}/all`);\r\n  return data;\r\n};\r\n\r\nexport const postData = async (type: string, value: string) => {\r\n  const { data } = await $authHost.post(type, { value: value });\r\n  return data;\r\n};\r\n\r\nexport const getHTML = async (url: string) => {\r\n  try {\r\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/${url}`);\r\n    return res.data;\r\n  } catch (err) {\r\n    toast.error('Файл не найден');\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Slider from '@mui/material/Slider';\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(' ');\r\n}\r\n\r\ntype TextOptionMenuProps = {\r\n  setTextSize: (value: number) => any\r\n  setLineHeight: (value: number) => any\r\n  setWidth: (value: number) => any\r\n  setParagraphMargin: (value: number) => any\r\n  setTextColor: (value: string) => any\r\n  setBgColor: (value: string) => any\r\n  bgColor: string\r\n  textColor: string\r\n}\r\n\r\nexport const TextOptionMenu: React.FC<TextOptionMenuProps> = props => {\r\n  const {\r\n    setTextSize,\r\n    setLineHeight,\r\n    setWidth,\r\n    setParagraphMargin,\r\n    setTextColor,\r\n    setBgColor,\r\n    bgColor,\r\n    textColor\r\n  } = props;\r\n  const [headerColor, setHeaderColor] = useState('bg-white');\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const Ts = [\r\n    {\r\n      textColor: 'text-black',\r\n      bgColor: 'bg-slate-100',\r\n      headerColor: 'bg-white'\r\n    },\r\n    {\r\n      textColor: 'text-stone-800',\r\n      bgColor: 'bg-amber-100',\r\n      headerColor: 'bg-amber-50'\r\n    },\r\n    {\r\n      textColor: 'text-amber-200',\r\n      bgColor: 'bg-stone-800',\r\n      headerColor: 'bg-stone-700'\r\n    },\r\n    {\r\n      textColor: 'text-slate-200',\r\n      bgColor: 'bg-gray-950',\r\n      headerColor: 'bg-gray-900'\r\n    },\r\n    {\r\n      textColor: 'text-gray-300',\r\n      bgColor: 'bg-neutral-950',\r\n      headerColor: 'bg-neutral-900'\r\n    }\r\n  ];\r\n  return (\r\n    <div\r\n      className={\r\n        'absolute flex top-0 w-full h-16 bg-none z-[9999] border-b-2 ' +\r\n        headerColor +\r\n        ' ' +\r\n        textColor\r\n      }>\r\n      <a className=\"my-auto\" href=\"/\">\r\n        <img className=\"h-8 w-auto ml-4\" alt=\"Your Company\" />\r\n      </a>\r\n      <div className=\"w-[840px] mx-auto flex\">\r\n        <span className=\"my-auto\">Текущая глава</span>\r\n      </div>\r\n      <div className=\"my-auto mr-4 flex flex-row transition-all duration-300\">\r\n        <div className=\"z-20\">\r\n          {/* {isOpen ? (\r\n            <XMarkIcon\r\n              onClick={() => setIsOpen(cur => !cur)}\r\n              className=\"block h-6 w-6\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          ) : (\r\n            <Bars3Icon\r\n              onClick={() => setIsOpen(cur => !cur)}\r\n              className=\"block h-6 w-6\"\r\n              aria-hidden=\"true\"\r\n            />\r\n          )} */}\r\n        </div>\r\n        <div\r\n          className={classNames(\r\n            isOpen ? 'translate-x-0' : 'translate-x-full',\r\n            'textOptionStyle mt-16',\r\n            bgColor\r\n          )}>\r\n          <div className=\"text-lg mt-1 pb-2 mb-4\">Стилизация страницы</div>\r\n\r\n          <div className=\"flex flex-row justify-between w-full px-3 mb-2\">\r\n            {Ts.map(t => {\r\n              const bor = ' border-' + t.textColor.substr(5);\r\n              return (\r\n                <div\r\n                  key={bor}\r\n                  onClick={() => {\r\n                    setBgColor(t.bgColor);\r\n                    setTextColor(t.textColor);\r\n                    setHeaderColor(t.headerColor);\r\n                  }}\r\n                  className={'py-3 px-6 border-2 ' + t.bgColor + ' ' + t.textColor + bor}>\r\n                  T\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <Box className=\"mx-auto\" sx={{ width: 350 }}>\r\n            <span>Размер шрифта</span>\r\n            <Slider\r\n              aria-label=\"Small steps\"\r\n              defaultValue={16}\r\n              getAriaValueText={setTextSize}\r\n              step={2}\r\n              marks\r\n              min={12}\r\n              max={28}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </Box>\r\n          <Box className=\"mx-auto\" sx={{ width: 350 }}>\r\n            <span>Размер шрифта</span>\r\n            <Slider\r\n              aria-label=\"Small steps\"\r\n              defaultValue={1.4}\r\n              getAriaValueText={setLineHeight}\r\n              step={0.1}\r\n              marks\r\n              min={1}\r\n              max={2}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </Box>\r\n          <Box className=\"mx-auto\" sx={{ width: 350 }}>\r\n            <span>Ширина контейнера</span>\r\n            <Slider\r\n              aria-label=\"Small steps\"\r\n              defaultValue={840}\r\n              getAriaValueText={setWidth}\r\n              step={80}\r\n              marks\r\n              min={800}\r\n              max={1920}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </Box>\r\n          <Box className=\"mx-auto\" sx={{ width: 350 }}>\r\n            <span>Размеры отступа</span>\r\n            <Slider\r\n              aria-label=\"Small steps\"\r\n              defaultValue={12}\r\n              getAriaValueText={setParagraphMargin}\r\n              step={4}\r\n              marks\r\n              min={4}\r\n              max={32}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { toast } from 'react-toastify'\r\nimport { $host, $authHost, getContentJsonType } from '../helpers'\r\n\r\nexport const getChapter = async ({ queryKey }: any) => {\r\n  const [_, id] = queryKey\r\n  const { data } = await $host.get(`chapter/${id}`)\r\n  return data\r\n}\r\n\r\nexport const postChapter = async (formValues: any) => {\r\n  try {\r\n    const contentType = getContentJsonType()\r\n    formValues = {\r\n      ...formValues,\r\n      ['status']: formValues.status.id,\r\n      ['bookTome']: formValues.bookTome.id,\r\n    }\r\n    const res = await $authHost.post('chapter', formValues, { ...contentType })\r\n    return res\r\n  } catch (e: any) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const postChapterComment = async (\r\n  userId: number,\r\n  discussionId: number,\r\n  id: number,\r\n  path: string,\r\n  value: string,\r\n) => {\r\n  const contentType = getContentJsonType()\r\n  const desc = JSON.stringify(value)\r\n  const { data } = await $authHost.post(\r\n    `chapter/${id}/comment`,\r\n    {\r\n      path,\r\n      discussionId,\r\n      userId,\r\n      value: desc,\r\n    },\r\n    { ...contentType },\r\n  )\r\n}\r\n\r\nexport const updateChapterText = async (bookId: number, id: number, desc: string) => {\r\n  console.log(bookId, id)\r\n  const body = { bookId, desc }\r\n\r\n  const res = await $authHost.post(`chapter/${id}/update`, body).catch((error: any) => {\r\n    toast.error(error.response.data.message)\r\n  })\r\n  return res\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getHTML } from '../../../actions/univAction';\r\n\r\nimport { TextOptionMenu } from './TextOptionMenu';\r\nimport { getChapter, postChapterComment } from '../../../actions/chapterApi';\r\nimport { useQuery } from 'react-query';\r\n\r\nconst ChapterPage = () => {\r\n  const [textColor, setTextColor] = useState('text-black');\r\n  const [bgColor, setBgColor] = useState('bg-slate-50');\r\n  const [textSize, setTextSize] = useState(14);\r\n  const [lineHeight, setLineHeight] = useState(1);\r\n  const [width, setWidth] = useState(800);\r\n  const [paragraphMargin, setParagraphMargin] = useState(2);\r\n  const [desc, setDesc] = useState('');\r\n\r\n  const { book, id } = useParams();\r\n\r\n  const { isLoading, isSuccess, error, isError, data } = useQuery<any, any>(['id', id], getChapter, {\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    refetchOnReconnect: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (isSuccess && data) getHTML(`books/${book}/${id}/${id}.txt`);\r\n  }, [isSuccess]);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <div>...Loading team </div>}\r\n      {isError && <div>{error.message}</div>}\r\n      {isSuccess && (\r\n        <>\r\n          <TextOptionMenu\r\n            setTextSize={setTextSize}\r\n            setLineHeight={setLineHeight}\r\n            setWidth={setWidth}\r\n            setParagraphMargin={setParagraphMargin}\r\n            setBgColor={setBgColor}\r\n            setTextColor={setTextColor}\r\n            bgColor={bgColor}\r\n            textColor={textColor}\r\n          />\r\n          <div\r\n            className={\r\n              'min-h-[calc(100vh_-_65px_-_148px)] transition-all ' + bgColor + ' ' + textColor\r\n            }>\r\n            <div style={{ width: width }} className={'mx-auto p-4'}>\r\n              <span>Глава №</span>\r\n              <div\r\n                style={{\r\n                  fontSize: textSize,\r\n                  lineHeight: lineHeight\r\n                }}>\r\n                {!desc && <div>Глава еще не загружена</div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChapterPage;\r\n"],"names":["getData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","_yield$$host$get","data","wrap","_context","prev","next","$host","get","concat","sent","abrupt","stop","_x","apply","arguments","getHTML","_ref3","_callee3","url","res","_context3","axios","process","t0","toast","error","_x4","classNames","_len","length","classes","Array","_key","filter","Boolean","join","TextOptionMenu","props","setTextSize","setLineHeight","setWidth","setParagraphMargin","setTextColor","setBgColor","bgColor","textColor","_useState","useState","_useState2","_slicedToArray","headerColor","setHeaderColor","_useState3","_useState4","isOpen","_jsxs","className","children","_jsx","href","alt","map","t","bor","substr","onClick","Box","sx","width","Slider","defaultValue","getAriaValueText","step","marks","min","max","valueLabelDisplay","getChapter","_ref2","queryKey","_queryKey","id","_useState5","_useState6","textSize","_useState7","_useState8","lineHeight","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","desc","_useParams","useParams","book","_useQuery","useQuery","retry","refetchOnWindowFocus","refetchOnReconnect","isLoading","isSuccess","isError","useEffect","console","log","_Fragment","message","style","fontSize"],"sourceRoot":""}